QUAND LA CATEGORIE EST SELECTIONNEE AFFICHE LE MESSAGE
    select.addEventListener('change', () => {
        const selectedCategory = select.value;
        if (selectedCategory) {
            console.log(`Catégorie sélectionnée: ${selectedCategory}`);
        } else {
            console.log('Aucune catégorie sélectionnée');
        }
    });

QUAND ON ECRIT DANS L INPUT? AFFICHE LETTRE APRES LETTRE
NewTitle.addEventListener('input', () => {
    const titleValue = NewTitle.value.trim(); // Récupère la valeur du champ et enlève les espaces
    if (titleValue) {
        console.log(`Titre saisi : ${titleValue}`);
    } else {
        console.log('Aucun titre saisi');
    }
});

QUAND ON A SELECTIONNE UN FICHIER IMAGE
// Écouteur d'événement pour l'input de sélection de fichier
inputURLPhoto.addEventListener('change', () => {
    const selectedFile = inputURLPhoto.files[0]; // Récupère le fichier sélectionné
    if (selectedFile) {
        console.log(`Fichier sélectionné : ${selectedFile.name}`);
    } else {
        console.log("Aucun fichier sélectionné");
    }
});


function checkFieldsFilled() {
    console.log("checkFieldsFilled called");
    const isCategoryFilled = select.value !== "";  // Catégorie sélectionnée
    const isTitleFilled = NewTitle.value.trim() !== "";  // Titre saisi
    const isFileSelected = inputURLPhoto.files.length > 0;  // Fichier sélectionné

    console.log(`isCategoryFilled: ${isCategoryFilled}`); // Afficher l'état de la catégorie
    console.log(`isTitleFilled: ${isTitleFilled}`); // Afficher l'état du titre
    console.log(`isFileSelected: ${isFileSelected}`); // Afficher l'état du fichier
    // Si les trois champs sont remplis
    if (isCategoryFilled && isTitleFilled && isFileSelected) {
        console.log("3 champs remplis");
    }
}























const valideButton = document.createElement("button")
valideButton.disabled = true
valideButton.className= 'inactiveButton'

const checkInput = () => {
if(inputTitle.target.value && inputCategory.value && inputPhoto.files.length>=1) {
    valideButton.disabled = false 
    valideButton.className= 'activeButton'
}  else {
    valideButton.disabled = true
    valideButton.className= 'inactiveButton'
}
}

inputTitle.addEventListener('change', checkInput)
inputCategory.addEventListener('change', checkInput)
inputPhoto.addEventListener('change', checkInput)


















.modifyMesProjets {
    /* Votre style de base pour la div */
    opacity: 1;
    transition: opacity 300ms ease-out; /* Transition d'opacité si nécessaire */
}

.modifyMesProjets.active {
    /* Style lorsque la classe active est présente */
    opacity: 1;
}

.modifyMesProjets.animate {
    /* Lorsque la classe animate est ajoutée, on lance l'animation */
    animation-name: dissolve; /* Animation de dissolution */
    animation-timing-function: ease-out; /* Fonction de temporisation */
    animation-duration: 300ms; /* Durée de l'animation */
}

/* Animation : dissolution */
@keyframes dissolve {
    0% {
        opacity: 0; /* L'élément commence invisible */
    }
    100% {
        opacity: 1; /* L'élément devient complètement visible */
    }
}



JS
document.querySelector('.modifyMesProjets').addEventListener('click', function() {
    // Ajouter la classe 'animate' pour déclencher l'animation
    this.classList.add('animate');

    // Après la fin de l'animation (300ms), retirer la classe 'animate' pour qu'elle soit prête pour le prochain clic
    setTimeout(() => {
        this.classList.remove('animate');
    }, 300); // Le délai doit correspondre à la durée de l'animation
});





JS
if (editMode) {
    editMode.classList.replace('hidden', 'active');
} else {
    console.error('Élément .editMode introuvable');
}


CSS 
.deleteGallery{
	/* display: flex;
	justify-content: center;
	align-items: center;
	flex-wrap: wrap;
	width: 100%; */
	display: grid;
	grid-template-columns: repeat(5,1fr);
	column-gap: 15px; /* Espace entre les colonnes */
    row-gap: 25px;    /* Espace entre les lignes */
	padding-bottom: 50px;
	border-bottom:1px solid #B3B3B3;
}
.deleteCard{
	position: relative;
	margin: 10px;
}
.deleteCard img{
	width: 100%;
	object-fit: contain;
}